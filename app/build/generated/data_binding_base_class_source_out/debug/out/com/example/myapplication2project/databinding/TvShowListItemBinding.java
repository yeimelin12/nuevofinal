// Generated by view binder compiler. Do not edit!
package com.example.myapplication2project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication2project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TvShowListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView date;

  @NonNull
  public final LinearLayout fav;

  @NonNull
  public final Button favo;

  @NonNull
  public final ImageView poster;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView tvshowname;

  private TvShowListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView date,
      @NonNull LinearLayout fav, @NonNull Button favo, @NonNull ImageView poster,
      @NonNull TextView status, @NonNull TextView tvshowname) {
    this.rootView = rootView;
    this.date = date;
    this.fav = fav;
    this.favo = favo;
    this.poster = poster;
    this.status = status;
    this.tvshowname = tvshowname;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TvShowListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TvShowListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tv_show_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TvShowListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      LinearLayout fav = (LinearLayout) rootView;

      id = R.id.favo;
      Button favo = ViewBindings.findChildViewById(rootView, id);
      if (favo == null) {
        break missingId;
      }

      id = R.id.poster;
      ImageView poster = ViewBindings.findChildViewById(rootView, id);
      if (poster == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.tvshowname;
      TextView tvshowname = ViewBindings.findChildViewById(rootView, id);
      if (tvshowname == null) {
        break missingId;
      }

      return new TvShowListItemBinding((LinearLayout) rootView, date, fav, favo, poster, status,
          tvshowname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
